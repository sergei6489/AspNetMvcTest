@model Core.User
<div class="container">
    @using (Html.BeginForm( ViewBag.IsNew ? "Add" : "Edit","User",FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>
                @if (String.IsNullOrEmpty(Model.UserName))
                {
                    @Html.Raw( "Новый пользователь" );
                }
                else
                {
                    @Html.Raw( "Редактировать пользователя" );
                }
            </h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
    
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-3">
                    <input type="submit" value="Сохранить" class="btn btn-success" />
                </div>
            </div>
        </div>
    }   
</div>
